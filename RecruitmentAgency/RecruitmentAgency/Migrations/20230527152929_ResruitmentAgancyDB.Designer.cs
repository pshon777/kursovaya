// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentAgency;

#nullable disable

namespace RecruitmentAgency.Migrations
{
    [DbContext(typeof(ResruitmentAgancyDbContext))]
    [Migration("20230527152929_ResruitmentAgancyDB")]
    partial class ResruitmentAgancyDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecruitmentAgency.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Applicants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 90,
                            Email = "Ivanov@mail.ru",
                            Name = "Иван",
                            Patronymic = "Иванович",
                            Surname = "Иванов",
                            Telephone = "7874574"
                        },
                        new
                        {
                            Id = 91,
                            Email = "Vas@mail.ru",
                            Name = "Дмитрий",
                            Patronymic = "Иванович",
                            Surname = "Васичкин",
                            Telephone = "4596236"
                        });
                });

            modelBuilder.Entity("RecruitmentAgency.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vacancy", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 90,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Частичная занятость, полный день. Возможна подработка: сменами по 4 - 6 часов, по выходным или по вечерам",
                            Name = "Курьер",
                            Salary = 800m,
                            Specialization = "опыт работы - не требйется"
                        },
                        new
                        {
                            Id = 91,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "полная занятость, сменный график",
                            Name = "Администратор фитнес-клуба",
                            Salary = 1400m,
                            Specialization = "требуемый опыт работы: 1–3 года"
                        });
                });

            modelBuilder.Entity("RecruitmentAgency.Models.VacancyApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyApplication", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 90,
                            ApplicantId = 90,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacancyId = 91
                        },
                        new
                        {
                            Id = 91,
                            ApplicantId = 91,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VacancyId = 90
                        });
                });

            modelBuilder.Entity("RecruitmentAgency.Models.VacancyApplication", b =>
                {
                    b.HasOne("RecruitmentAgency.Models.Applicant", "Applicant")
                        .WithMany("VacancyApplications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecruitmentAgency.Models.Vacancy", "Vacancy")
                        .WithMany("VacancyApplications")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("RecruitmentAgency.Models.Applicant", b =>
                {
                    b.Navigation("VacancyApplications");
                });

            modelBuilder.Entity("RecruitmentAgency.Models.Vacancy", b =>
                {
                    b.Navigation("VacancyApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
